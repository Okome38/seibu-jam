<!DOCTYPE html>
<html lang="ja">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>青武jam - Fukuinct2025</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        :root {
            --primary-color: #4f46e5;
            --secondary-color: #06b6d4;
            --accent-color: #f59e0b;
            --bg-gradient: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            --card-shadow: 0 10px 25px rgba(0,0,0,0.1);
            --card-hover-shadow: 0 15px 35px rgba(0,0,0,0.15);
            --text-dark: #1f2937;
            --text-light: #6b7280;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: var(--bg-gradient);
            min-height: 100vh;
            color: var(--text-dark);
        }

        /* ナビゲーション */
        .navbar {
            backdrop-filter: blur(10px);
            background: rgba(255, 255, 255, 0.95) !important;
            box-shadow: 0 2px 20px rgba(0,0,0,0.1);
            padding: 1rem 0;
        }

        .navbar-brand {
            font-size: 1.8rem;
            font-weight: 700;
            background: linear-gradient(45deg, var(--primary-color), var(--secondary-color));
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }

        .nav-link {
            font-weight: 500;
            color: var(--text-dark) !important;
            transition: all 0.3s ease;
            position: relative;
        }

        .nav-link:hover {
            color: var(--primary-color) !important;
            transform: translateY(-2px);
        }

        .nav-link::after {
            content: '';
            position: absolute;
            width: 0;
            height: 2px;
            bottom: -5px;
            left: 50%;
            background: var(--primary-color);
            transition: all 0.3s ease;
            transform: translateX(-50%);
        }

        .nav-link:hover::after {
            width: 100%;
        }

        /* メインコンテナ */
        .main-container {
            margin-top: 2rem;
            margin-bottom: 2rem;
        }

        /* ヒーローセクション */
        .hero-section {
            text-align: center;
            padding: 3rem 0;
            background: rgba(255, 255, 255, 0.95);
            border-radius: 20px;
            margin-bottom: 2rem;
            box-shadow: var(--card-shadow);
            backdrop-filter: blur(10px);
        }

        .hero-title {
            font-size: 3rem;
            font-weight: 800;
            background: linear-gradient(45deg, var(--primary-color), var(--secondary-color));
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            margin-bottom: 1rem;
        }

        .hero-subtitle {
            font-size: 1.2rem;
            color: var(--text-light);
            margin-bottom: 2rem;
        }

        .hero-link {
            color: var(--primary-color);
            text-decoration: none;
            font-weight: 600;
            padding: 0.5rem 1rem;
            border-radius: 10px;
            background: rgba(79, 70, 229, 0.1);
            transition: all 0.3s ease;
        }

        .hero-link:hover {
            background: var(--primary-color);
            color: white;
            transform: translateY(-2px);
        }

        /* カードスタイル */
        .modern-card {
            background: rgba(255, 255, 255, 0.95);
            border-radius: 20px;
            padding: 2rem;
            box-shadow: var(--card-shadow);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.2);
            transition: all 0.3s ease;
            margin-bottom: 2rem;
        }

        .modern-card:hover {
            transform: translateY(-5px);
            box-shadow: var(--card-hover-shadow);
        }

        .card-header-modern {
            display: flex;
            align-items: center;
            margin-bottom: 1.5rem;
            padding-bottom: 1rem;
            border-bottom: 2px solid rgba(79, 70, 229, 0.1);
        }

        .card-icon {
            font-size: 2rem;
            margin-right: 1rem;
            background: linear-gradient(45deg, var(--primary-color), var(--secondary-color));
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }

        .card-title {
            font-size: 1.5rem;
            font-weight: 700;
            color: var(--text-dark);
            margin: 0;
        }

        /* 天気予報スタイル */
        .weather-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 1rem;
            margin: 1.5rem 0;
        }

        .weather-item-modern {
            background: linear-gradient(135deg, rgba(255,255,255,0.9) 0%, rgba(248,250,252,0.9) 100%);
            border-radius: 15px;
            padding: 1.5rem;
            text-align: center;
            box-shadow: 0 5px 15px rgba(0,0,0,0.08);
            transition: all 0.3s ease;
            border: 1px solid rgba(255,255,255,0.3);
        }

        .weather-item-modern:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 25px rgba(0,0,0,0.12);
        }

        .weather-date {
            font-weight: 600;
            margin-bottom: 0.5rem;
            color: var(--text-dark);
        }

        .weather-img {
            width: 60px;
            height: 60px;
            margin: 0.5rem 0;
        }

        .weather-temp {
            font-size: 1.1rem;
            font-weight: 600;
            margin-top: 0.5rem;
        }

        .temp-min { color: #3b82f6; }
        .temp-max { color: #ef4444; }

        /* 混雑度グラフ */
        .chart-container {
            position: relative;
            height: 300px;
            margin: 1.5rem 0;
            background: rgba(255,255,255,0.5);
            border-radius: 15px;
            padding: 1rem;
        }

        /* 掲示板スタイル */
        .bulletin-form {
            background: rgba(255,255,255,0.8);
            border-radius: 15px;
            padding: 1.5rem;
            margin-bottom: 2rem;
            box-shadow: 0 5px 15px rgba(0,0,0,0.08);
        }

        .form-control-modern {
            border: 2px solid rgba(79, 70, 229, 0.1);
            border-radius: 10px;
            padding: 0.8rem 1rem;
            transition: all 0.3s ease;
            background: rgba(255,255,255,0.9);
        }

        .form-control-modern:focus {
            border-color: var(--primary-color);
            box-shadow: 0 0 0 0.2rem rgba(79, 70, 229, 0.25);
            background: white;
        }

        .btn-modern {
            background: linear-gradient(45deg, var(--primary-color), var(--secondary-color));
            border: none;
            color: white;
            padding: 0.8rem 2rem;
            border-radius: 10px;
            font-weight: 600;
            transition: all 0.3s ease;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .btn-modern:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(79, 70, 229, 0.3);
            color: white;
        }

        .post-item-modern {
            background: rgba(255,255,255,0.7);
            border-radius: 12px;
            padding: 1.2rem;
            margin-bottom: 1rem;
            border-left: 4px solid var(--primary-color);
            transition: all 0.3s ease;
        }

        .post-item-modern:hover {
            background: rgba(255,255,255,0.9);
            transform: translateX(5px);
        }

        .post-author {
            font-weight: 600;
            color: var(--primary-color);
        }

        .post-date {
            color: var(--text-light);
            font-size: 0.9rem;
        }

        .post-message {
            margin-top: 0.5rem;
            line-height: 1.6;
        }

        /* 丼カウンター専用スタイル */
        .don-counter-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 1.5rem;
            margin: 2rem 0;
        }

        .counter-card {
            background: linear-gradient(135deg, rgba(255,255,255,0.95) 0%, rgba(248,250,252,0.95) 100%);
            border-radius: 20px;
            padding: 2rem;
            text-align: center;
            box-shadow: var(--card-shadow);
            transition: all 0.3s ease;
            border: 2px solid transparent;
        }

        .counter-card.don {
            border-color: rgba(34, 197, 94, 0.3);
        }

        .counter-card.non-don {
            border-color: rgba(59, 130, 246, 0.3);
        }

        .counter-card:hover {
            transform: translateY(-5px);
            box-shadow: var(--card-hover-shadow);
        }

        .counter-number {
            font-size: 4rem;
            font-weight: 800;
            margin: 1rem 0;
        }

        .counter-number.don { color: #22c55e; }
        .counter-number.non-don { color: #3b82f6; }

        .counter-label {
            font-size: 1.2rem;
            font-weight: 600;
            margin-bottom: 0.5rem;
        }

        .stats-progress {
            background: rgba(255,255,255,0.8);
            border-radius: 10px;
            height: 20px;
            overflow: hidden;
            margin: 1rem 0;
            box-shadow: inset 0 2px 4px rgba(0,0,0,0.1);
        }

        .progress-bar-don {
            background: linear-gradient(90deg, #22c55e, #16a34a);
        }

        .progress-bar-non-don {
            background: linear-gradient(90deg, #3b82f6, #2563eb);
        }

        .button-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 1rem;
            margin: 1.5rem 0;
        }

        .btn-don {
            background: linear-gradient(45deg, #22c55e, #16a34a);
            border: none;
            color: white;
            padding: 1rem 2rem;
            border-radius: 15px;
            font-weight: 600;
            font-size: 1.1rem;
            transition: all 0.3s ease;
        }

        .btn-non-don {
            background: linear-gradient(45deg, #3b82f6, #2563eb);
            border: none;
            color: white;
            padding: 1rem 2rem;
            border-radius: 15px;
            font-weight: 600;
            font-size: 1.1rem;
            transition: all 0.3s ease;
        }

        .btn-don:hover, .btn-non-don:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 25px rgba(0,0,0,0.2);
            color: white;
        }

        .btn-reset {
            background: linear-gradient(45deg, #f59e0b, #d97706);
            border: none;
            color: white;
            padding: 0.8rem 1.5rem;
            border-radius: 12px;
            font-weight: 600;
            transition: all 0.3s ease;
        }

        .btn-reset:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(245, 158, 11, 0.3);
            color: white;
        }

        /* フッター */
        .footer-modern {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-top: 1px solid rgba(255, 255, 255, 0.2);
            padding: 2rem 0;
            text-align: center;
            color: var(--text-light);
            margin-top: 3rem;
        }

        /* レスポンシブ対応 */
        @media (max-width: 768px) {
            .hero-title {
                font-size: 2rem;
            }
            
            .modern-card {
                padding: 1.5rem;
            }
            
            .weather-grid {
                grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
            }
            
            .counter-number {
                font-size: 3rem;
            }
        }

        /* アニメーション */
        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .fade-in-up {
            animation: fadeInUp 0.6s ease-out;
        }

        /* アラートスタイル */
        .alert-modern {
            border: none;
            border-radius: 12px;
            padding: 1rem 1.5rem;
            margin-bottom: 1.5rem;
            backdrop-filter: blur(10px);
        }

        .alert-success {
            background: rgba(34, 197, 94, 0.1);
            color: #166534;
            border-left: 4px solid #22c55e;
        }

        .alert-danger {
            background: rgba(239, 68, 68, 0.1);
            color: #991b1b;
            border-left: 4px solid #ef4444;
        }
    </style>
</head>
<body>
    <!-- ナビゲーション -->
    <nav class="navbar navbar-expand-lg fixed-top">
        <div class="container">
            <a class="navbar-brand" href="#home">
                <i class="fas fa-mountain"></i> Fukuinct2025
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav ms-auto">
                    <li class="nav-item">
                        <a class="nav-link" href="#home">
                            <i class="fas fa-home"></i> ホーム
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#don-counter">
                            <i class="fas fa-bowl-rice"></i> 丼カウンター
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#hobby">
                            <i class="fas fa-gamepad"></i> 趣味
                        </a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>

    <!-- メインコンテンツ -->
    <div class="container main-container" style="padding-top: 100px;">
        <!-- ヒーローセクション -->
        <section id="home" class="hero-section fade-in-up">
            <h1 class="hero-title">🏔️ 青武jam</h1>
            <p class="hero-subtitle">福井高専生活をサポートする情報ハブ</p>
            <p>
                <a href="https://www.fukui-nct.ac.jp/wp/wp-content/uploads/2025/04/2faa9754d9a33485215a756bb4c73525-1.pdf" 
                   class="hero-link" target="_blank">
                    <i class="fas fa-calendar-alt"></i> 行事予定を確認
                </a>
            </p>
        </section>

        <!-- 天気予報セクション -->
        <section class="modern-card fade-in-up">
            <div class="card-header-modern">
                <i class="card-icon fas fa-cloud-sun"></i>
                <h2 class="card-title">天気予報</h2>
            </div>
            <div id="weatherForecast" class="weather-grid">
                <div class="weather-item-modern">
                    <div class="weather-date">読み込み中...</div>
                    <img class="weather-img" alt="天気アイコン">
                    <div class="weather-telop">--</div>
                    <div class="weather-temp">
                        <span class="temp-min">-℃</span>/<span class="temp-max">-℃</span>
                    </div>
                </div>
            </div>
            <div id="location" class="text-center text-muted">
                <small>
                    <a href="https://www.jma.go.jp/bosai/forecast/" target="_blank" class="text-decoration-none">
                        <i class="fas fa-external-link-alt"></i> 気象庁データ
                    </a>
                </small>
            </div>
            <div id="currentWeatherText" class="text-center mt-2"></div>
        </section>

        <!-- 混雑度グラフセクション -->
        <section class="modern-card fade-in-up">
            <div class="card-header-modern">
                <i class="card-icon fas fa-chart-line"></i>
                <h2 class="card-title">寮の風呂 混雑度予測</h2>
            </div>
            <div class="chart-container">
                <canvas id="congestionChart"></canvas>
            </div>
            <p class="text-center text-muted">
                <small><i class="fas fa-info-circle"></i> 天気や曜日を考慮した予測値です</small>
            </p>
        </section>

        <!-- 丼カウンターセクション -->
        <section id="don-counter" class="modern-card fade-in-up">
            <div class="card-header-modern">
                <i class="card-icon fas fa-bowl-rice"></i>
                <h2 class="card-title">寮昼食 丼カウンター</h2>
            </div>
            
            <!-- カウンター表示 -->
            <div class="don-counter-grid">
                <div class="counter-card don">
                    <div class="counter-label">🍚 丼日</div>
                    <div class="counter-number don">42</div>
                    <p class="text-muted">回</p>
                </div>
                <div class="counter-card non-don">
                    <div class="counter-label">🍽️ 非丼日</div>
                    <div class="counter-number non-don">28</div>
                    <p class="text-muted">回</p>
                </div>
            </div>

            <!-- 統計表示 -->
            <div class="text-center mb-4">
                <div class="row">
                    <div class="col-md-4">
                        <strong>総カウント:</strong> <span class="text-primary">70回</span>
                    </div>
                    <div class="col-md-4">
                        <strong>丼率:</strong> <span class="text-success">60.0%</span>
                    </div>
                    <div class="col-md-4">
                        <strong>非丼率:</strong> <span class="text-primary">40.0%</span>
                    </div>
                </div>
                <div class="stats-progress mt-3">
                    <div class="progress-bar progress-bar-don" style="width: 60%"></div>
                    <div class="progress-bar progress-bar-non-don" style="width: 40%"></div>
                </div>
                <small class="text-muted">
                    <i class="fas fa-clock"></i> 最終更新: 2025/05/29 12:30 by 管理者
                </small>
            </div>

            <!-- 操作フォーム -->
            <div class="bulletin-form">
                <h5 class="mb-3"><i class="fas fa-lock"></i> カウンター操作（管理者のみ）</h5>
                <form>
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label class="form-label">パスワード</label>
                            <input type="password" class="form-control form-control-modern" required>
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">更新者名（任意）</label>
                            <input type="text" class="form-control form-control-modern" placeholder="匿名">
                        </div>
                    </div>
                    
                    <div class="button-grid">
                        <button type="button" class="btn btn-don">
                            🍚 丼！
                        </button>
                        <button type="button" class="btn btn-non-don">
                            🍽️ 非丼！
                        </button>
                    </div>
                    
                    <div class="text-center">
                        <button type="button" class="btn btn-reset" onclick="return confirm('本当にカウンターをリセットしますか？')">
                            🔄 カウンターリセット
                        </button>
                    </div>
                </form>
            </div>
        </section>

        <!-- 掲示板セクション -->
        <section class="modern-card fade-in-up">
            <div class="card-header-modern">
                <i class="card-icon fas fa-comments"></i>
                <h2 class="card-title">掲示板</h2>
            </div>

            <!-- 投稿フォーム -->
            <div class="bulletin-form">
                <form>
                    <div class="row">
                        <div class="col-md-4 mb-3">
                            <label class="form-label">名前</label>
                            <input type="text" class="form-control form-control-modern" required>
                        </div>
                        <div class="col-md-8 mb-3">
                            <label class="form-label">メッセージ</label>
                            <textarea class="form-control form-control-modern" rows="3" required></textarea>
                        </div>
                    </div>
                    <div class="text-end">
                        <button type="submit" class="btn btn-modern">
                            <i class="fas fa-paper-plane"></i> 投稿
                        </button>
                    </div>
                </form>
            </div>

            <!-- メッセージ一覧 -->
            <h5 class="mb-3"><i class="fas fa-list"></i> 投稿一覧</h5>
            <div class="post-item-modern">
                <div class="d-flex justify-content-between align-items-center mb-2">
                    <span class="post-author">田中太郎</span>
                    <span class="post-date">2025/05/29 14:30</span>
                </div>
                <div class="post-message">
                    今日の丼はチキンカツ丼でした！美味しかったです 🍚
                </div>
            </div>
            
            <div class="post-item-modern">
                <div class="d-flex justify-content-between align-items-center mb-2">
                    <span class="post-author">佐藤花子</span>
                    <span class="post-date">2025/05/29 13:15</span>
                </div>
                <div class="post-message">
                    明日のテストがんばりましょう！ 📚
                </div>
            </div>
        </section>

        <!-- 趣味ページセクション -->
        <section id="hobby" class="modern-card fade-in-up">
            <div class="card-header-modern">
                <i class="card-icon fas fa-gamepad"></i>
                <h2 class="card-title">趣味ページ</h2>
            </div>
            
            <div id="password-section">
                <p class="mb-3">このページにアクセスするにはパスワードを入力してください。</p>
                <div class="row">
                    <div class="col-md-6">
                        <input type="password" id="passwordInput" class="form-control form-control-modern" placeholder="パスワードを入力">
                    </div>
                    <div class="col-md-6">
                        <button onclick="checkPassword()" class="btn btn-modern">
                            <i class="fas fa-key"></i> 認証
                        </button>
                    </div>
                </div>
                <p id="errorMsg" class="text-danger mt-2"></p>
            </div>

            <div id="game-section" style="display:none;">
                <h5 class="mb-3">🎮 じゃんけんゲーム</h5>
                <p class="mb-3">手を選んでください:</p>
                <div class="button-grid">
                    <button onclick="play('ぐー')" class="btn btn-modern">✊ ぐー</button>
                    <button onclick="play('ちょき')" class="btn btn-modern">✌️ ちょき</button>
                    <button onclick="play('ぱー')" class="btn btn-modern">✋ ぱー</button>
                </div>
                <div id="result" class="text-center mt-3 fs-5"></div>
            </div>
        </section>
    </div>

    <!-- フッター -->
    <footer class="footer-modern">
        <div class="container">
            <p>&copy; 2025 Fukuinct2025 - Made with <i class="fas fa-heart text-danger"></i> for 福井高専生</p>
        </div>
    </footer>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <!-- Chart.js -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    
    <script>
        // 趣味ページのパスワード認証
        const correctPassword = "1234";

        function checkPassword() {
            const input = document.getElementById("passwordInput").value;
            if (input === correctPassword) {
                document.getElementById("password-section").style.display = "none";
                document.getElementById("game-section").style.display = "block";
            } else {
                document.getElementById("errorMsg").innerText = "パスワードが違います。";
            }
        }

        function play(playerHand) {
            const hands = ["ぐー", "ちょき", "ぱー"];
            const computerHand = hands[Math.floor(Math.random() * 3)];
            let result = "";

            if (playerHand === computerHand) {
                result = "🤝 あいこです！";
            } else if (
                (playerHand === "ぐー" && computerHand === "ちょき") ||
                (playerHand === "ちょき" && computerHand === "ぱー") ||
                (playerHand === "ぱー" && computerHand === "ぐー")
            ) {
                result = `🎉 あなたの勝ち！ 相手は${computerHand}でした。`;
            } else {
                result = `😅 あなたの負け！ 相手は${computerHand}でした。`;
            }

            document.getElementById("result").innerHTML = result;
        }

        // 天気予報データを取得・表示
        async function fetchWeatherData() {
            try {
                // サンプルの天気データ（実際のAPIに置き換え可能）
                const weatherData = [
                    {
                        date: "今日",
                        telop: "晴れ",
                        image: "https://www.jma.go.jp/bosai/forecast/img/100.svg",
                        temperature: { min: "18", max: "28" }
                    },
                    {
                        date: "明日",
                        telop: "曇り",
                        image: "https://www.jma.go.jp/bosai/forecast/img/200.svg",
                        temperature: { min: "16", max: "24" }
                    },
                    {
                        date: "明後日",
                        telop: "雨",
                        image: "https://www.jma.go.jp/bosai/forecast/img/300.svg",
                        temperature: { min: "14", max: "20" }
                    }
                ];

                const weatherContainer = document.getElementById("weatherForecast");
                weatherContainer.innerHTML = "";

                weatherData.forEach(day => {
                    const weatherItem = document.createElement("div");
                    weatherItem.className = "weather-item-modern";
                    weatherItem.innerHTML = `
                        <div class="weather-date">${day.date}</div>
                        <img class="weather-img" src="${day.image}" alt="${day.telop}">
                        <div class="weather-telop">${day.telop}</div>
                        <div class="weather-temp">
                            <span class="temp-min">${day.temperature.min}℃</span>/
                            <span class="temp-max">${day.temperature.max}℃</span>
                        </div>
                    `;
                    weatherContainer.appendChild(weatherItem);
                });

                document.getElementById("currentWeatherText").innerHTML = 
                    `<strong>現在の天気:</strong> ${weatherData[0].telop} (${weatherData[0].temperature.min}-${weatherData[0].temperature.max}℃)`;

            } catch (error) {
                console.error("天気データの取得に失敗しました:", error);
                document.getElementById("weatherForecast").innerHTML = 
                    '<div class="alert alert-danger">天気データの読み込みに失敗しました</div>';
            }
        }

        // 混雑度グラフを作成
        function createCongestionChart() {
            const ctx = document.getElementById('congestionChart').getContext('2d');
            
            const timeLabels = ['17:00', '17:30', '18:00', '18:30', '19:00', '19:30', '20:00', '20:30', '21:00', '21:30', '22:00'];
            const congestionData = [20, 35, 85, 95, 70, 60, 80, 90, 75, 45, 25];

            new Chart(ctx, {
                type: 'line',
                data: {
                    labels: timeLabels,
                    datasets: [{
                        label: '混雑度 (%)',
                        data: congestionData,
                        borderColor: 'rgb(79, 70, 229)',
                        backgroundColor: 'rgba(79, 70, 229, 0.1)',
                        borderWidth: 3,
                        fill: true,
                        tension: 0.4,
                        pointBackgroundColor: 'rgb(79, 70, 229)',
                        pointBorderColor: '#ffffff',
                        pointBorderWidth: 2,
                        pointRadius: 6,
                        pointHoverRadius: 8
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            display: true,
                            position: 'top',
                            labels: {
                                font: {
                                    size: 14,
                                    weight: 'bold'
                                }
                            }
                        },
                        tooltip: {
                            backgroundColor: 'rgba(0,0,0,0.8)',
                            titleColor: '#ffffff',
                            bodyColor: '#ffffff',
                            cornerRadius: 8,
                            displayColors: false
                        }
                    },
                    scales: {
                        y: {
                            beginAtZero: true,
                            max: 100,
                            grid: {
                                color: 'rgba(0,0,0,0.1)'
                            },
                            ticks: {
                                font: {
                                    size: 12
                                },
                                callback: function(value) {
                                    return value + '%';
                                }
                            }
                        },
                        x: {
                            grid: {
                                color: 'rgba(0,0,0,0.1)'
                            },
                            ticks: {
                                font: {
                                    size: 12
                                }
                            }
                        }
                    }
                }
            });
        }

        // スムーズスクロール
        document.querySelectorAll('a[href^="#"]').forEach(anchor => {
            anchor.addEventListener('click', function (e) {
                e.preventDefault();
                const target = document.querySelector(this.getAttribute('href'));
                if (target) {
                    target.scrollIntoView({
                        behavior: 'smooth',
                        block: 'start'
                    });
                }
            });
        });

        // 丼カウンター機能
        let donCount = 42;
        let nonDonCount = 28;

        function updateCounters() {
            document.querySelector('.counter-number.don').textContent = donCount;
            document.querySelector('.counter-number.non-don').textContent = nonDonCount;
            
            const total = donCount + nonDonCount;
            const donRate = total > 0 ? ((donCount / total) * 100).toFixed(1) : 0;
            const nonDonRate = total > 0 ? ((nonDonCount / total) * 100).toFixed(1) : 0;
            
            document.querySelector('.text-primary').textContent = total + '回';
            document.querySelector('.text-success').textContent = donRate + '%';
            document.querySelector('.text-primary:last-of-type').textContent = nonDonRate + '%';
            
            // プログレスバー更新
            document.querySelector('.progress-bar-don').style.width = donRate + '%';
            document.querySelector('.progress-bar-non-don').style.width = nonDonRate + '%';
        }

        // ボタンイベント
        document.querySelector('.btn-don').addEventListener('click', function() {
            const password = document.querySelector('input[type="password"]').value;
            if (password === '1234') {
                donCount++;
                updateCounters();
                showAlert('🍚 丼カウントを追加しました！', 'success');
            } else {
                showAlert('❌ パスワードが正しくありません', 'danger');
            }
        });

        document.querySelector('.btn-non-don').addEventListener('click', function() {
            const password = document.querySelector('input[type="password"]').value;
            if (password === '1234') {
                nonDonCount++;
                updateCounters();
                showAlert('🍽️ 非丼カウントを追加しました！', 'success');
            } else {
                showAlert('❌ パスワードが正しくありません', 'danger');
            }
        });

        document.querySelector('.btn-reset').addEventListener('click', function() {
            const password = document.querySelector('input[type="password"]').value;
            if (password === '1234') {
                if (confirm('本当にカウンターをリセットしますか？')) {
                    donCount = 0;
                    nonDonCount = 0;
                    updateCounters();
                    showAlert('🔄 カウンターをリセットしました', 'success');
                }
            } else {
                showAlert('❌ パスワードが正しくありません', 'danger');
            }
        });

        // アラート表示関数
        function showAlert(message, type) {
            const alertDiv = document.createElement('div');
            alertDiv.className = `alert alert-modern alert-${type}`;
            alertDiv.textContent = message;
            
            const container = document.querySelector('#don-counter');
            container.insertBefore(alertDiv, container.firstChild);
            
            setTimeout(() => {
                alertDiv.remove();
            }, 3000);
        }

        // 掲示板機能
        const posts = [
            { author: '田中太郎', message: '今日の丼はチキンカツ丼でした！美味しかったです 🍚', date: '2025/05/29 14:30' },
            { author: '佐藤花子', message: '明日のテストがんばりましょう！ 📚', date: '2025/05/29 13:15' }
        ];

        function renderPosts() {
            const container = document.querySelector('.modern-card:last-of-type');
            const existingPosts = container.querySelectorAll('.post-item-modern');
            existingPosts.forEach(post => post.remove());

            posts.forEach(post => {
                const postDiv = document.createElement('div');
                postDiv.className = 'post-item-modern';
                postDiv.innerHTML = `
                    <div class="d-flex justify-content-between align-items-center mb-2">
                        <span class="post-author">${post.author}</span>
                        <span class="post-date">${post.date}</span>
                    </div>
                    <div class="post-message">${post.message}</div>
                `;
                container.appendChild(postDiv);
            });
        }

        // 掲示板投稿フォーム
        document.querySelector('.bulletin-form form').addEventListener('submit', function(e) {
            e.preventDefault();
            
            const nameInput = this.querySelector('input[type="text"]');
            const messageInput = this.querySelector('textarea');
            
            if (nameInput.value.trim() && messageInput.value.trim()) {
                const newPost = {
                    author: nameInput.value.trim(),
                    message: messageInput.value.trim(),
                    date: new Date().toLocaleString('ja-JP', {
                        year: 'numeric',
                        month: '2-digit',
                        day: '2-digit',
                        hour: '2-digit',
                        minute: '2-digit'
                    }).replace(/\//g, '/').replace(',', '')
                };
                
                posts.unshift(newPost);
                renderPosts();
                
                nameInput.value = '';
                messageInput.value = '';
                
                showAlert('✅ 投稿が完了しました！', 'success');
            }
        });

        // ページ読み込み完了時の初期化
        document.addEventListener('DOMContentLoaded', function() {
            fetchWeatherData();
            createCongestionChart();
            
            // フェードインアニメーション
            const elements = document.querySelectorAll('.fade-in-up');
            elements.forEach((el, index) => {
                setTimeout(() => {
                    el.style.opacity = '1';
                    el.style.transform = 'translateY(0)';
                }, index * 200);
            });
        });

        // スクロール時のナビゲーション効果
        window.addEventListener('scroll', function() {
            const navbar = document.querySelector('.navbar');
            if (window.scrollY > 50) {
                navbar.style.background = 'rgba(255, 255, 255, 0.98)';
            } else {
                navbar.style.background = 'rgba(255, 255, 255, 0.95)';
            }
        });
    </script>
</body>
</html>
